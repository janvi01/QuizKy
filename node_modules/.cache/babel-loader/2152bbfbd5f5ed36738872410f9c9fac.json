{"ast":null,"code":"var _jsxFileName = \"/Users/mohitbajoria/Desktop/GithubJanvi/QuizKy/src/components/quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./quiz.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const api_url = \"https://opentdb.com/api.php?amount=10&category=9\";\n  const [question, setQuestion] = useState(\"\");\n  const [questioncontent, setQuestioncontent] = useState([]); //const [index, setindex] = useState(0);\n\n  useEffect(() => {\n    fetch(api_url).then(res => res.json()).then(data => {\n      setQuestioncontent(data.results);\n      setQuestion(data.results.question);\n    });\n  }, []); //const [exit, setexit] = useState(\"\");\n\n  const option = [questioncontent.correct_answer, questioncontent.incorrect_answers, questioncontent.incorrect_answers, questioncontent.incorrect_answers];\n  option.sort(); //const [score, setscore] = useState(0);\n\n  /*const [res, setres] = useState(\"\");\n  const [count, setcount] = useState(0);\n  const [wrong, setwrong] = useState(0);\n  function check(correct, nam) {\n    if (correct === \"true\") {\n        setcount(count+1); \n        if(count===0)\n      setscore(score + 1);\n      setres(\"Yayy! Correct answer ðŸŽ‰\");\n      document.getElementById(nam).className=\"correct\";\n    } else {\n        setwrong(wrong+1);\n        setres(\"Oops, Wrong answer.\");\n        document.getElementById(nam).className=\"incorrect\";\n    }\n  }  \n  function reset(){\n    document.getElementById(\"a\").className=\"btnn\";\n    document.getElementById(\"b\").className=\"btnn\";\n    document.getElementById(\"c\").className=\"btnn\";\n    document.getElementById(\"d\").className=\"btnn\";\n    setres(\"\");\n    setcount(0);\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [question.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Score : 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topbox\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answerbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          id: \"a\",\n          children: \"option[0]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          id: \"b\",\n          children: \"option[1]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnn\",\n          id: \"c\",\n          children: \"option[2]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnn\",\n          id: \"d\"\n          /*onClick={() => {\n            check(correct_answers.answer_d_correct, \"d\");\n          }}*/\n          ,\n          children: \"option[3];\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"OghL8VDIhtXxPq3KXLEBPIH2TpQ=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/mohitbajoria/Desktop/GithubJanvi/QuizKy/src/components/quiz.js"],"names":["React","useState","useEffect","Quiz","api_url","question","setQuestion","questioncontent","setQuestioncontent","fetch","then","res","json","data","results","option","correct_answer","incorrect_answers","sort","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAMC,OAAO,GACb,kDADA;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD,CAJc,CAKd;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACL,OAAD,CAAL,CACGM,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdL,MAAAA,kBAAkB,CAACK,IAAI,CAACC,OAAN,CAAlB;AACAR,MAAAA,WAAW,CAACO,IAAI,CAACC,OAAL,CAAaT,QAAd,CAAX;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT,CANc,CAcd;;AACA,QAAMU,MAAM,GAAC,CAACR,eAAe,CAACS,cAAjB,EAAiCT,eAAe,CAACU,iBAAjD,EAAoEV,eAAe,CAACU,iBAApF,EAAuGV,eAAe,CAACU,iBAAvH,CAAb;AACAF,EAAAA,MAAM,CAACG,IAAP,GAhBc,CAkBd;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACGb,QAAQ,CAACc,MAAT,GAAkB,CAAlB,gBACD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eACwB;AAAA;AAAA;AAAA;AAAA,gBADxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAA,oBAAKd;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,EAAE,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,EAAE,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,EAAE,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,EAAE,EAAC;AAC1B;AACZ;AACA;AAHU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBAmCH;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApCA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GApFQF,I;;KAAAA,I;AAuFT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./quiz.css\";\n\nfunction Quiz() {\n  const api_url =\n  \"https://opentdb.com/api.php?amount=10&category=9\";\n  const [question, setQuestion] = useState(\"\");\n  const [questioncontent, setQuestioncontent] = useState([]);\n  //const [index, setindex] = useState(0);\n  useEffect(() => {\n    fetch(api_url)\n      .then((res) => res.json())\n      .then((data) => {\n        setQuestioncontent(data.results);\n        setQuestion(data.results.question);\n      });\n  }, []);\n  //const [exit, setexit] = useState(\"\");\n  const option=[questioncontent.correct_answer, questioncontent.incorrect_answers, questioncontent.incorrect_answers, questioncontent.incorrect_answers];\n  option.sort();\n\n  //const [score, setscore] = useState(0);\n  /*const [res, setres] = useState(\"\");\n  const [count, setcount] = useState(0);\n  const [wrong, setwrong] = useState(0);\n  function check(correct, nam) {\n    if (correct === \"true\") {\n        setcount(count+1); \n        if(count===0)\n      setscore(score + 1);\n      setres(\"Yayy! Correct answer ðŸŽ‰\");\n      document.getElementById(nam).className=\"correct\";\n    } else {\n        setwrong(wrong+1);\n        setres(\"Oops, Wrong answer.\");\n        document.getElementById(nam).className=\"incorrect\";\n    }\n  }  \n  function reset(){\n    document.getElementById(\"a\").className=\"btnn\";\n    document.getElementById(\"b\").className=\"btnn\";\n    document.getElementById(\"c\").className=\"btnn\";\n    document.getElementById(\"d\").className=\"btnn\";\n    setres(\"\");\n    setcount(0);\n  }*/\n  \n\n  return (\n    <div className=\"main\">\n      {question.length > 0 ? (\n      <div className=\"container\">\n\n        <div className=\"head\">\n          <span>Score : 0</span><br/>\n        </div>\n        <div className=\"topbox\">\n          <h2>{question}</h2>\n        </div>\n        <div className=\"answerbox\">\n          <button className=\"btn\" id=\"a\">\n            option[0]\n          </button>\n          <button className=\"btn\" id=\"b\"\n          >\n           option[1]\n          </button>\n          <button className=\"btnn\" id=\"c\"\n            \n          >\n            option[2]\n          </button>\n          <button className=\"btnn\" id=\"d\"\n            /*onClick={() => {\n              check(correct_answers.answer_d_correct, \"d\");\n            }}*/\n          >\n            option[3];\n          </button>\n          {/*<h4>{res}</h4>\n          <i class=\"fas fa-sync-alt\" onClick={reset}></i>*/}\n          </div>\n      </div>\n\n  ) : (\n    <div className=\"App-header\">Loading.....</div>)\n  } </div>);\n}\n\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}